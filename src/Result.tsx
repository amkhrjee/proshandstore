/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 result.gltf --transform --types 
Files: result.gltf [2.76KB] > C:\Users\aniru_sr6lha9\Downloads\BaseOG\result-transformed.glb [940.93KB] (-33992%)
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
// import { ForwardRefExoticComponent } from "react";

type GLTFResult = GLTF & {
  nodes: {
    node: THREE.Mesh;
  };
  materials: {
    DefaultMaterial: THREE.MeshStandardMaterial;
  };
  // animations: GLTFAction[];
};

// type ContextType = Record<
//   string,
//   ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
// >;

export function Result(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/result-transformed.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.node.geometry}
        material={materials.DefaultMaterial}
      />
    </group>
  );
}

useGLTF.preload("/result-transformed.glb");
